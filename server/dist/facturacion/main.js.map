{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/angular-material.module.ts","webpack:///./src/app/components/clientes/clientes.component.css","webpack:///./src/app/components/clientes/clientes.component.html","webpack:///./src/app/components/clientes/clientes.component.ts","webpack:///./src/app/components/components.module.ts","webpack:///./src/app/components/components.routing.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/nueva-factura/nueva-factura.component.css","webpack:///./src/app/components/nueva-factura/nueva-factura.component.html","webpack:///./src/app/components/nueva-factura/nueva-factura.component.ts","webpack:///./src/app/components/pages/pages.component.css","webpack:///./src/app/components/pages/pages.component.html","webpack:///./src/app/components/pages/pages.component.ts","webpack:///./src/app/components/productos/productos.component.css","webpack:///./src/app/components/productos/productos.component.html","webpack:///./src/app/components/productos/productos.component.ts","webpack:///./src/app/components/vercliente/vercliente.component.css","webpack:///./src/app/components/vercliente/vercliente.component.html","webpack:///./src/app/components/vercliente/vercliente.component.ts","webpack:///./src/app/components/verfactura/verfactura.component.css","webpack:///./src/app/components/verfactura/verfactura.component.html","webpack:///./src/app/components/verfactura/verfactura.component.ts","webpack:///./src/app/config/url.ts","webpack:///./src/app/guards/logeado.guard.ts","webpack:///./src/app/layouts/toolbar/toolbar.component.css","webpack:///./src/app/layouts/toolbar/toolbar.component.html","webpack:///./src/app/layouts/toolbar/toolbar.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/registro/registro.component.css","webpack:///./src/app/registro/registro.component.html","webpack:///./src/app/registro/registro.component.ts","webpack:///./src/app/services/cliente.service.ts","webpack:///./src/app/services/facturacion.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/producto.service.ts","webpack:///./src/app/services/registro.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegistroComponent } from './registro/registro.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  // {path: 'registro', component: RegistroComponent},\n  {path: 'login', component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet>\\n</router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'facturaciones';\n\n  fecha = new Date();\n\n \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n// components\nimport { RegistroComponent } from './registro/registro.component';\nimport { LoginComponent } from './login/login.component';\nimport { ToolbarComponent } from './layouts/toolbar/toolbar.component';\nimport { ComponentsModule } from './components/components.module';\n\n// angular material\nimport { MatToolbarModule } from '@angular/material';\nimport { AngularMaterialModule } from './components/angular-material.module';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistroComponent,\n    LoginComponent,\n    ToolbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ComponentsModule,\n    MatToolbarModule,\n    AngularMaterialModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\n\n\nimport { MatCardModule,\n    MatProgressBarModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatListModule,\n    MatSidenavModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatBottomSheetModule,\n    MatStepperModule,\n    MatTableModule,\n    MatDialogModule\n} from '@angular/material';\n\n\n@NgModule({\n    imports: [MatCardModule,\n        MatProgressBarModule,\n        MatInputModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatMenuModule,\n        MatListModule,\n        MatSidenavModule,\n        MatBadgeModule,\n        MatTooltipModule,\n        MatBottomSheetModule,\n        MatStepperModule,\n        MatTableModule,\n        MatDialogModule],\n\n    exports: [MatCardModule,\n        MatProgressBarModule,\n        MatInputModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatMenuModule,\n        MatListModule,\n        MatSidenavModule,\n        MatBadgeModule,\n        MatTooltipModule,\n        MatBottomSheetModule,\n        MatStepperModule,\n        MatTableModule,\n        MatDialogModule]\n})\nexport class AngularMaterialModule {\n\n}\n","module.exports = \"mat-form-field {\\n    display: block;\\n}\\n\\ntable {\\n    width: 100%;\\n}\\n\\n.alto {\\n    height: 420px;\\n    overflow: hidden;\\n}\\n\\n.scroll {\\n    overflow-y: scroll;\\n    height: 400px;\\n    /*background:gray;*/\\n    padding: 5px;\\n}\\n\\n.example-spacer {\\n    -webkit-box-flex: 1;\\n            flex: 1 1 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnRlcy9jbGllbnRlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGFBQWE7SUFDYixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksbUJBQWM7WUFBZCxjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnRlcy9jbGllbnRlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG50YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5hbHRvIHtcbiAgICBoZWlnaHQ6IDQyMHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5zY3JvbGwge1xuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgICBoZWlnaHQ6IDQwMHB4O1xuICAgIC8qYmFja2dyb3VuZDpncmF5OyovXG4gICAgcGFkZGluZzogNXB4O1xufVxuXG4uZXhhbXBsZS1zcGFjZXIge1xuICAgIGZsZXg6IDEgMSBhdXRvO1xufSJdfQ== */\"","module.exports = \"<div class=\\\"container-fluid mt-5\\\">\\n\\n\\n    <div class=\\\"row\\\">\\n\\n\\n        <div class=\\\"col-md-5\\\">\\n\\n            <mat-card>\\n                <mat-card-title *ngIf=\\\"editandoCliente\\\">\\n                    Editando Cliente\\n                </mat-card-title>\\n\\n                <mat-card-title *ngIf=\\\"!editandoCliente\\\">\\n                    Nuevo Cliente\\n                </mat-card-title>\\n\\n                <mat-card-content>\\n\\n                    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"RegistrarCliente(form)\\\">\\n                        <input type=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"formulario._id\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-12 \\\">\\n                                <mat-form-field appearance=\\\"outline\\\">\\n                                    <mat-label>Nombre Completo</mat-label>\\n                                    <input type=\\\"text\\\" matInput placeholder=\\\"Nombre completo\\\" name=\\\"nombre\\\" [(ngModel)]=\\\"formulario.nombre\\\" required>\\n\\n\\n                                </mat-form-field>\\n                            </div>\\n\\n                        </div>\\n\\n                        <div class=\\\"row\\\">\\n\\n\\n\\n                            <div class=\\\"col-md-6\\\">\\n                                <mat-form-field appearance=\\\"outline\\\">\\n                                    <mat-label>Cedula (Ejemplo: V-00000000)</mat-label>\\n                                    <input type=\\\"text\\\" matInput placeholder=\\\"Cedula\\\" name=\\\"cedula\\\" [disabled]=\\\"editandoCliente\\\" [(ngModel)]=\\\"formulario.cedula\\\">\\n\\n\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-6\\\">\\n                                <mat-form-field appearance=\\\"outline\\\">\\n                                    <mat-label>Edad</mat-label>\\n                                    <input type=\\\"text\\\" matInput placeholder=\\\"Edad\\\" name=\\\"edad\\\" [(ngModel)]=\\\"formulario.edad\\\" #edad (keyup)=\\\"edad1 = edad.value\\\" data-inputmask='\\\"mask\\\": \\\"99\\\"' data-mask>\\n\\n\\n                                </mat-form-field>\\n                            </div>\\n\\n\\n\\n                        </div>\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-12 \\\">\\n                                <mat-form-field appearance=\\\"outline\\\">\\n                                    <mat-label>Direccion local</mat-label>\\n                                    <input type=\\\"text\\\" name=\\\"direccion\\\" [(ngModel)]=\\\"formulario.direccion\\\" required matInput placeholder=\\\"Direccion local\\\">\\n\\n\\n                                </mat-form-field>\\n                            </div>\\n\\n                        </div>\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <mat-form-field appearance=\\\"outline\\\">\\n                                    <mat-label>Celular</mat-label>\\n                                    <input type=\\\"text\\\" matInput placeholder=\\\"Celular\\\" name=\\\"celular\\\" [(ngModel)]=\\\"formulario.celular\\\" #celular (keyup)=\\\"celular1 = celular.value\\\" data-inputmask='\\\"mask\\\": \\\"(9999)-999-9999\\\"' data-mask>\\n\\n\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-6\\\">\\n                                <mat-form-field appearance=\\\"outline\\\">\\n                                    <mat-label>Telefono (Opcional)</mat-label>\\n                                    <input type=\\\"text\\\" matInput placeholder=\\\"Telefono (Opcional)\\\" name=\\\"telefono\\\" [(ngModel)]=\\\"formulario.telefono\\\" #telefono (keyup)=\\\"telefono1 = telefono.value\\\" data-inputmask='\\\"mask\\\": \\\"(9999)-999-9999\\\"' data-mask>\\n\\n\\n                                </mat-form-field>\\n                            </div>\\n\\n                        </div>\\n\\n\\n                        <button *ngIf=\\\" !editandoCliente \\\" class=\\\"btn-block\\\" [disabled]=\\\"form.valid === false\\\" mat-raised-button color=\\\"primary\\\">Agregar Cliente</button  >\\n                        <button  *ngIf=\\\" editandoCliente \\\" class=\\\"btn-block\\\" [disabled]=\\\"form.valid === false\\\" mat-raised-button color=\\\"primary\\\">Editar Cliente</button>\\n\\n                    </form>\\n\\n\\n\\n                </mat-card-content>\\n\\n                <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"clickSubmit\\\"></mat-progress-bar>\\n\\n            </mat-card>\\n\\n        </div>\\n\\n\\n        <div class=\\\"col-md-7\\\">\\n\\n            <mat-card>\\n                <mat-card-title>\\n                    Clientes registrado\\n\\n                    <span class=\\\"example-spacer \\\"></span>\\n                    <div class=\\\"float-right\\\">\\n\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Buscar Cliente\\\" #buscar (keyup)=\\\"buscarCliente(buscar.value)\\\">\\n\\n\\n                    </div>\\n                </mat-card-title>\\n\\n                <mat-card-content class=\\\"alto\\\">\\n\\n                    <div class=\\\"scroll\\\">\\n                        <table class=\\\"table table \\\">\\n\\n\\n                            <thead>\\n                                <tr>\\n                                    <th>Cliente</th>\\n\\n                                    <th>Cedula</th>\\n\\n                                    <th>Celular</th>\\n\\n                                    <th>Fecha de Creacion</th>\\n                                </tr>\\n\\n                            </thead>\\n\\n\\n                            <tbody>\\n                                <h3 *ngIf=\\\"!existeCliente\\\" class=\\\"text-center\\\"> No existe el cliente </h3>\\n                                <tr *ngFor=\\\"let cliente of clientes\\\">\\n                                    <td> {{cliente.nombre}} </td>\\n\\n                                    <td>{{cliente.cedula}}</td>\\n\\n                                    <td>{{cliente.celular}}</td>\\n\\n                                    <td>{{cliente.fechaCreacion | date: \\\"short\\\"}}</td>\\n\\n                                    <td>\\n                                        <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"VerCliente(cliente._id)\\\"><mat-icon>visibility</mat-icon></button> &nbsp;\\n                                        <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"EditarCliente(cliente._id)\\\"><mat-icon>create</mat-icon></button> &nbsp;\\n                                        <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"EliminarCliente(cliente._id)\\\"><mat-icon>delete</mat-icon></button>\\n                                    </td>\\n                                </tr>\\n\\n                            </tbody>\\n\\n\\n\\n                        </table>\\n                    </div>\\n\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n\\n\\n\\n\\n\\n\\n    </div>\\n\\n\\n\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Cliente } from 'src/app/config/cliente';\n\nimport { ClienteService } from '../../services/cliente.service';\nimport { MatBottomSheet, MatSnackBar } from '@angular/material';\nimport { VerclienteComponent } from '../vercliente/vercliente.component';\n\n\n\n\n\n\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.css']\n})\nexport class ClientesComponent implements OnInit {\n\n  clickSubmit = false;\n\n  edad1: string;\n  celular1: string;\n  telefono1: string;\n\n  formulario = {\n    nombre: '',\n    cedula: 'V-',\n    edad: '',\n    celular: '',\n    telefono: '',\n    direccion: '',\n    id: ''\n  }\n\n  clientes: any[] = [];\n\n  editandoCliente = false;\n\n  existeCliente = true;\n\n\n\n\n\n\n\n  constructor(private clienteService: ClienteService,\n              private bottomSheet: MatBottomSheet,\n              private snackBar: MatSnackBar) {  }\n\n  ngOnInit() {\n    this.llamarCliente()\n  }\n\n  RegistrarCliente(form: NgForm) {\n\n\n    if (this.formulario.cedula.charAt(0)  === 'V' || this.formulario.cedula.charAt(0) === 'E'){\n      \n      this.clickSubmit = true;\n\n\n\n    if (this.formulario.id !== '') {\n\n      const cliente = {\n        cedula: this.formulario.cedula,\n        celular: this.celular1,\n        direccion: this.formulario.direccion,\n        edad: this.edad1,\n        nombre: this.formulario.nombre,\n        telefono: this.telefono1\n     }\n\n      return this.clienteService.actualizarCliente(this.formulario.id, cliente).subscribe((resp4) => {\n       this.toast('Cliente editado con exito', 'Cerrar')\n       this.clickSubmit = false;\n       this.llamarCliente()\n       form.reset()\n       this.formulario.cedula = 'V-'\n       this.formulario.id = '';\n       this.editandoCliente = false;\n     })\n    }\n\n    \n\n\n    const cliente: Cliente = {\n       cedula: this.formulario.cedula,\n       celular: this.celular1,\n       direccion: this.formulario.direccion,\n       edad: this.edad1,\n       fechaCreacion: Date.now(),\n       nombre: this.formulario.nombre,\n       telefono: this.telefono1\n    }\n\n    return this.clienteService.CrearCliente(cliente).subscribe((resp: any) => {\n\n      if (!resp.err){\n        form.reset();\n        this.formulario.cedula = 'V-'\n    \n        this.llamarCliente();\n        this.clickSubmit = false;\n        return this.toast('Cliente creado con exito', 'Cerrar')\n\n      }\n        if (resp.err.message === 'clientes validation failed: cedula: cedula debe ser unico'){\n          this.clickSubmit = false;\n          return this.toast(`Ya existe un usuario con la cedula ${this.formulario.cedula}`, 'Cerrar')\n        }\n\n    })\n\n  }else{\n    this.clickSubmit = false;\n    return this.toast('La cedula debe empezar con V o E, verifique el ejemplo', 'Cerrar')\n  }\n\n  }\n\n\n  llamarCliente(){\n    this.clienteService.llamarClientes().subscribe((resp2: any) => {\n\n      this.clientes = resp2.listado;\n\n    })\n  }\n\n\n  VerCliente(id){\n    const solicitud = this.bottomSheet.open(VerclienteComponent, {data: id});\n\n    solicitud.afterDismissed().subscribe((resp) => {\n  \n\n    });\n  }\n\n  EditarCliente(id){\n    this.clienteService.verCliente(id).subscribe((resp: any) => {\n      this.editandoCliente = true;\n      this.formulario.nombre = resp.solicitud.nombre;\n      this.formulario.cedula = resp.solicitud.cedula;\n      this.formulario.direccion = resp.solicitud.direccion;\n      this.formulario.edad = resp.solicitud.edad;\n      this.formulario.celular = resp.solicitud.celular;\n      this.formulario.telefono = resp.solicitud.telefono;\n      this.formulario.id = resp.solicitud._id;\n    })\n  }\n\n\n\n  buscarCliente(key){\n\n    if(key.length > 0){\n     return this.clienteService.buscarCliente(key).subscribe((resp: any) => {\n        this.clientes = resp.listado;\n\n        this.existeCliente = true;\n\n        if(this.clientes.length === 0) {\n\n          this.existeCliente = false;\n        }\n      });\n      \n    }\n    this.existeCliente = true;\n    this.llamarCliente()\n\n    \n  }\n\n\n  EliminarCliente(id){\n    this.clienteService.EliminarCliente(id).subscribe(() => {\n      this.toast('Cliente Eliminado', 'Cerrar')\n      this.editandoCliente = false;\n      this.formulario.id = '';\n      return this.llamarCliente();\n    })\n  }\n\n\n\n  toast(mensaje: string, accion: string) {\n    this.snackBar.open(mensaje, accion, {\n      duration: 3000,\n    });\n  }\n\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n\n\n\nimport { ComponentsRoutingModule } from './components.routing';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { MatToolbarModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// components\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PagesComponent } from './pages/pages.component';\nimport { NuevaFacturaComponent } from './nueva-factura/nueva-factura.component';\nimport { ProductosComponent } from './productos/productos.component';\nimport { ClientesComponent } from './clientes/clientes.component';\nimport { VerclienteComponent } from './vercliente/vercliente.component';\nimport { VerfacturaComponent } from './verfactura/verfactura.component';\n\n\n\n\n\n\n@NgModule({\n\n\n    entryComponents: [NuevaFacturaComponent, VerclienteComponent, VerfacturaComponent],\n    declarations: [DashboardComponent, PagesComponent, NuevaFacturaComponent, ProductosComponent, ClientesComponent, VerclienteComponent, VerfacturaComponent],\n\n    imports: [BrowserModule,\n        BrowserAnimationsModule,\n        ComponentsRoutingModule,\n        AngularMaterialModule,\n        MatToolbarModule,\n        FormsModule,\n        ReactiveFormsModule\n        ],\n\n    exports: []\n})\nexport class ComponentsModule {\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\n// components\n\nimport {PagesComponent} from './pages/pages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProductosComponent } from './productos/productos.component';\nimport { ClientesComponent } from './clientes/clientes.component';\nimport { LogeadoGuard } from '../guards/logeado.guard';\n\n\n\n\n\nconst routesPage: Routes = [\n    {path: '', component: PagesComponent, canActivate: [LogeadoGuard] ,children: [\n        {path: 'dashboard', component: DashboardComponent},\n        {path: 'productos', component: ProductosComponent},\n        {path: 'clientes', component: ClientesComponent},\n        {path: '**', redirectTo: 'dashboard'}\n    ] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routesPage)],\n  exports: [RouterModule]\n})\nexport class ComponentsRoutingModule {\n\n}","module.exports = \".example-spacer {\\n    -webkit-box-flex: 1;\\n            flex: 1 1 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBYztZQUFkLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLXNwYWNlciB7XG4gICAgZmxleDogMSAxIGF1dG87XG59Il19 */\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n\\n\\n\\n    <mat-card>\\n        <mat-card-title>\\n            Facturaciones\\n\\n            <span class=\\\"example-spacer \\\"></span>\\n            <div class=\\\"float-right\\\">\\n\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Buscar Cliente\\\" #buscar (keyup)=\\\"buscarCliente(buscar.value)\\\">\\n\\n\\n            </div>\\n        </mat-card-title>\\n\\n        <mat-card-content>\\n\\n            <table class=\\\"table table \\\">\\n\\n\\n                <thead>\\n                    <tr>\\n                        <th class=\\\"text-center\\\">Codigo Factura</th>\\n\\n                        <th class=\\\"text-center\\\">Cliente</th>\\n\\n                        <th class=\\\"text-center\\\">Cedula</th>\\n\\n                        <th class=\\\"text-center\\\">Fecha Creacion</th>\\n\\n\\n                    </tr>\\n\\n                </thead>\\n\\n\\n                <tbody>\\n                    <h3 *ngIf=\\\"!existeFactura\\\"> Cliente solicitado no existe </h3>\\n\\n                    <tr *ngFor=\\\"let factura of Facturas\\\">\\n                        <td class=\\\"text-center\\\"> {{factura.codigoFactura}} </td>\\n\\n                        <td class=\\\"text-center\\\"> {{factura.cliente}} </td>\\n\\n                        <td class=\\\"text-center\\\"> {{factura.cedula}}</td>\\n\\n                        <td class=\\\"text-center\\\"> {{factura.fechaCreacion | date: \\\"short\\\"}}</td>\\n\\n\\n\\n                        <td>\\n                            <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"abrirDialog(factura._id)\\\"><mat-icon>visibility</mat-icon></button>&nbsp;\\n                            <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"EliminarFactura(factura._id)\\\"><mat-icon>delete</mat-icon></button>\\n                        </td>\\n                    </tr>\\n\\n                </tbody>\\n\\n\\n\\n\\n\\n            </table>\\n\\n\\n\\n        </mat-card-content>\\n    </mat-card>\\n\\n\\n\\n\\n\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FacturacionService } from '../../services/facturacion.service';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { VerfacturaComponent } from '../verfactura/verfactura.component';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  Facturas = [];\n\n  existeFactura = true;\n\n  constructor(private facturacionService: FacturacionService, \n              public dialog: MatDialog,\n              private snackBar: MatSnackBar) {\n                \n                setInterval(() => {\n\n                if (this.facturacionService.NuevaFactura){\n                  this.llamarFacturas()\n                  this.facturacionService.NuevaFactura = false;\n                }\n          \n              }, 1000) \n            \n            }\n\n  ngOnInit() {\n    this.llamarFacturas()\n\n    \n  }\n\n\n  llamarFacturas(){\n    this.facturacionService.llamarFacturas().subscribe((resp: any) => {\n      this.Facturas = resp.listado;\n    })\n  }\n\n\n  abrirDialog(id) {\n    const dialogRef = this.dialog.open(VerfacturaComponent, {\n      data: id\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n  \n    });\n  }\n\n\n  EliminarFactura(id){\n    this.facturacionService.EliminarFactura(id).subscribe(() => {\n      this.toast('Factura Eliminada', 'Cerrar')\n      return this.llamarFacturas()\n    })\n  }\n\n  buscarCliente(key){\n    if (key.length > 0){\n      return this.facturacionService.buscarFacturaporCliente(key).subscribe((resp: any) => {\n        this.Facturas = resp.listado;\n\n        this.existeFactura = true;\n\n        if (this.Facturas.length === 0) {\n          this.existeFactura = false;\n        }\n      })\n      \n    }\n\n    this.existeFactura = true;\n    this.llamarFacturas()\n  }\n\n  toast(mensaje: string, accion: string) {\n    this.snackBar.open(mensaje, accion, {\n      duration: 3000,\n    });\n  }\n\n}\n","module.exports = \"mat-form-field {\\n    display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9udWV2YS1mYWN0dXJhL251ZXZhLWZhY3R1cmEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL251ZXZhLWZhY3R1cmEvbnVldmEtZmFjdHVyYS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufSJdfQ== */\"","module.exports = \"<h2>Nueva Solicitud</h2>\\n<mat-horizontal-stepper linear #stepper>\\n    <mat-step>\\n        <form #form1=\\\"ngForm\\\">\\n            <ng-template matStepLabel>Selecciona un cliente (sino se encuentra puedes agregarlo en la seccion \\\"Nuevo cliente\\\")</ng-template>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"texto\\\">\\n\\n                        <mat-label>Ingresa la cedula y presiona Enter</mat-label>\\n\\n                        <input matInput placeholder=\\\"Ingresa la cedula del cliente\\\" name=\\\"cedula\\\" [(ngModel)]=\\\"nuevaFacturacion.cedula\\\" #cedula (keyup.enter)=\\\"buscarCliente(cedula.value)\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-8\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"texto\\\">\\n\\n                        <mat-label>Cliente</mat-label>\\n\\n                        <input matInput disabled name=\\\"cliente\\\" [(ngModel)]=\\\"nuevaFacturacion.cliente\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div>\\n                <button mat-button (click)=\\\"buscarCliente(cedula.value)\\\">Buscar Cliente</button>\\n                <button mat-button matStepperNext [disabled]=\\\"nuevaFacturacion.cliente === ''\\\">Siguiente</button>\\n            </div>\\n        </form>\\n    </mat-step>\\n    <mat-step>\\n        <form #form2=\\\"ngForm\\\">\\n            <ng-template matStepLabel> Productos </ng-template>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"texto\\\">\\n                        <mat-label>Ingresa el codigo del producto y presina enter</mat-label>\\n\\n                        <input type=\\\"number\\\" [disabled]=\\\"Producto.producto !== ''\\\" placeholder=\\\"Codigo del producto\\\" value=\\\"1000\\\" #codigo (keyup.enter)=\\\"buscarProducto(codigo.value)\\\" matInput>\\n\\n\\n                    </mat-form-field>\\n\\n                    <span *ngIf=\\\"Producto.producto !== ''\\\">\\n\\n                    <mat-form-field  appearance=\\\"outline\\\" class=\\\"texto\\\">\\n                        <mat-label>Producto</mat-label>\\n\\n                        <input type=\\\"text\\\" disabled value=\\\"{{Producto.producto}}   |   {{Producto.monto}} Bs.S\\\" matInput>\\n\\n                    </mat-form-field>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <button mat-button (click)=\\\"agregarProducto(Producto)\\\" >Agregar producto</button>\\n                            \\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                            <button mat-button (click)=\\\"clear()\\\" >Limpiar</button>\\n                        </div>\\n                    </div>\\n\\n                </span>\\n\\n                    <button mat-button *ngIf=\\\"Producto.producto === ''\\\" (click)=\\\"buscarProducto(codigo.value)\\\"></button>\\n                </div>\\n\\n                <div class=\\\"col-md-8\\\">\\n                    <table class=\\\"table table \\\">\\n\\n\\n                        <thead>\\n                            <tr>\\n                                <th class=\\\"text-center\\\">Codigo Producto</th>\\n\\n                                <th class=\\\"text-center\\\">Nombre</th>\\n\\n                                <th class=\\\"text-center\\\">Monto</th>\\n\\n\\n                            </tr>\\n\\n                        </thead>\\n\\n\\n                        <tbody>\\n                            <tr *ngFor=\\\"let producto of nuevaFacturacion.productos; let i = index\\\">\\n                                <td class=\\\"text-center\\\"> {{producto.codigoProducto}} </td>\\n\\n                                <td class=\\\"text-center\\\"> {{producto.producto}} </td>\\n\\n                                <td class=\\\"text-center\\\"> {{producto.monto}} Bs.S </td>\\n\\n\\n\\n                                <td>\\n                                    <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"borrarProducto(i)\\\"><mat-icon>delete</mat-icon></button>\\n                                </td>\\n                            </tr>\\n\\n                        </tbody>\\n\\n                        <tfoot>\\n                            <tr *ngIf=\\\"nuevaFacturacion.productos.length > 0\\\">\\n                                <td></td>\\n                                <td></td>\\n                                <td>\\n                                    Total Productos: {{ nuevaFacturacion.productos.length }}\\n                                </td>\\n                            </tr>\\n                        </tfoot>\\n\\n\\n\\n                    </table>\\n                </div>\\n            </div>\\n            <div>\\n                <button mat-button matStepperPrevious>Regresar</button>\\n                <button mat-button matStepperNext [disabled]=\\\"nuevaFacturacion.productos.length === 0\\\">Siguiente</button>\\n            </div>\\n        </form>\\n    </mat-step>\\n    <mat-step>\\n        <form #form3=\\\"ngForm\\\">\\n            <ng-template matStepLabel>Resumen Factura</ng-template>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <mat-form-field appearance=\\\"outline\\\">\\n                        <mat-label>Cliente</mat-label>\\n                        <input matInput disabled type=\\\"text\\\" [value]=\\\"cliente.nombre\\\" required>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <mat-form-field appearance=\\\"outline\\\">\\n                        <mat-label>Cedula</mat-label>\\n                        <input matInput disabled type=\\\"text\\\" [value]=\\\"cliente.cedula\\\" required>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <hr>\\n            <mat-card>\\n                <mat-card-title>\\n                    Productos a comprar\\n                </mat-card-title>\\n\\n                <mat-card-content>\\n                    <table class=\\\"table table \\\">\\n\\n\\n                        <thead>\\n                            <tr>\\n                                <th class=\\\"text-center\\\">Codigo Producto</th>\\n\\n                                <th class=\\\"text-center\\\">Nombre</th>\\n\\n                                <th class=\\\"text-center\\\">Monto</th>\\n\\n\\n                            </tr>\\n\\n                        </thead>\\n\\n\\n                        <tbody>\\n                            <tr *ngFor=\\\"let producto of nuevaFacturacion.productos; let i = index\\\">\\n                                <td class=\\\"text-center\\\"> {{producto.codigoProducto}} </td>\\n\\n                                <td class=\\\"text-center\\\"> {{producto.producto}} </td>\\n\\n                                <td class=\\\"text-center\\\"> {{producto.monto}} Bs.S </td>\\n\\n                            </tr>\\n\\n                        </tbody>\\n\\n                        <tfoot>\\n                            <tr>\\n                                <td></td>\\n                                <td></td>\\n                                <td class=\\\"text-center\\\">\\n                                    <strong>Total Productos:</strong> {{ nuevaFacturacion.productos.length }}\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td></td>\\n                                <td></td>\\n                                <td class=\\\"text-center\\\">\\n                                    <strong>Subtotal:</strong> {{ subtotalMonto }} Bs.S\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td></td>\\n                                <td></td>\\n                                <td class=\\\"text-center\\\">\\n                                    <strong>IVA 16%:</strong> {{ iva }} Bs.S\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td></td>\\n                                <td></td>\\n                                <td class=\\\"text-center\\\">\\n                                    <strong>Total:</strong> {{ TotalMonto }} Bs.S\\n                                </td>\\n                            </tr>\\n                        </tfoot>\\n\\n\\n\\n                    </table>\\n                </mat-card-content>\\n            </mat-card>\\n            <br>\\n            <div class=\\\"text-right\\\">\\n                <button mat-button matStepperPrevious>Regresar</button>\\n                <button mat-button matStepperPrevious (click)=\\\"cerrarModal($event)\\\">Aceptar</button>\\n                <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"clickSubmit\\\"></mat-progress-bar>\\n\\n            </div>\\n        </form>\\n    </mat-step>\\n</mat-horizontal-stepper>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA, MatSnackBar } from '@angular/material';\nimport { PagesComponent } from '../pages/pages.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { FacturacionService } from '../../services/facturacion.service';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-nueva-factura',\n  templateUrl: './nueva-factura.component.html',\n  styleUrls: ['./nueva-factura.component.css']\n})\nexport class NuevaFacturaComponent implements OnInit {\n\n\n  Producto = {codigoProducto: 0,\n    producto: '',\n    monto: 0};\n\n\n  formulario1: FormGroup;\n  formulario2: FormGroup;\n  formulario3: FormGroup;\n\n  cliente: any = {};\n  existeCliente = true;\n\n  nuevaFacturacion = {\n    cedula: 'V-',\n    cliente: '',\n    productos: []\n  }\n\n  subtotalMonto: number;\n  iva: number;\n  TotalMonto: number;\n\n  UltimoCodigoFatura: number;\n\n  clickSubmit = false;\n\n\n \n\n\n  constructor(private bottomSheetRef: MatBottomSheetRef<PagesComponent>,\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    private snackBar: MatSnackBar,\n    private facturacionService: FacturacionService,\n    private router: Router) {}\n\n  ngOnInit() {\n\n    this.llamarFacturas()\n\n\n  }\n\n\n\n\n  cerrarModal(event: MouseEvent): void {\n    event.preventDefault();\n\n    this.clickSubmit = true;\n    \n\n    let factura = {\n      cliente: this.nuevaFacturacion.cliente,\n      cedula: this.cliente.cedula,\n      productos: this.nuevaFacturacion.productos,\n      subtotal: this.subtotalMonto,\n      iva: this.iva,\n      totalmonto: this.TotalMonto,\n      codigoFactura: this.UltimoCodigoFatura + 1 || 10000,\n      fechaCreacion: Date.now()\n    }\n\n    this.facturacionService.crearFactura(factura).subscribe((resp: any) => {\n      if(resp.ok === true){\n        this.clickSubmit = false;\n        this.router.navigate(['/dashboard'])\n        this.bottomSheetRef.afterDismissed().subscribe(() => {\n           this.facturacionService.NuevaFactura = true;\n        })\n        this.toast('Factura creada con exito', 'Cerrar')\n         return this.bottomSheetRef.dismiss()\n      }\n      \n    })\n\n\n\n\n\n  }\n\n  buscarCliente(key){\n\n    if (key.length === 0){\n      return;\n    }\n    this.facturacionService.ObtenerClientePorCedula(key).subscribe((resp: any) => {\n      if (resp.message === 'exito') {\n        this.cliente = resp.cliente\n        this.existeCliente = true;\n        return this.nuevaFacturacion.cliente = resp.cliente.nombre;\n      }\n      if (resp.message === 'no se encontro cliente') {\n        this.existeCliente = false;\n        this.toast(`No existe cliente con la cedula ${key}`, 'Cerrar')\n        return this.nuevaFacturacion.cliente = '';\n        \n      }\n    })\n\n  }\n\n  llamarFacturas(){\n    this.facturacionService.llamarFacturas().subscribe((resp: any) => {\n\n      this.UltimoCodigoFatura = resp.listado[0].codigoFactura;\n      \n\n    })\n  }\n\n\n  buscarProducto(key){\n\n    if (key.length === 0){\n      return;\n    }\n\n    this.facturacionService.BuscarCodigoProducto(key).subscribe((resp: any) => {\n      \n      if (resp.message === 'Exito'){\n          this.Producto = {\n          codigoProducto: resp.codigoProducto.codigoProducto,\n          producto: resp.codigoProducto.producto,\n          monto: resp.codigoProducto.monto}\n\n        \n      }\n\n      if (resp.message === 'No existe codigo'){\n\n        this.toast(`No existe producto con el codigo ${key}`, 'Cerrar')\n        \n        return this.Producto = {codigoProducto: 0,\n          producto: '',\n          monto: 0};\n      }\n    })\n\n    \n  }\n\n\n  clear(){\n    return this.Producto = {codigoProducto: 0,\n      producto: '',\n      monto: 0}\n  }\n\n\n  agregarProducto(producto){\n    \n    this.clear()\n    this.nuevaFacturacion.productos.push({\n      codigoProducto: producto.codigoProducto,\n      producto: producto.producto,\n      monto: producto.monto\n    })\n\n\n    let monto = 0;\n\n  for (let i = 0; i <= this.nuevaFacturacion.productos.length; i++){\n\n    monto = monto + this.nuevaFacturacion.productos[i].monto;\n\n    this.subtotalMonto = monto\n\n    this.iva = (this.subtotalMonto * 16) / 100\n\n    this.TotalMonto = this.subtotalMonto + this.iva\n\n\n\n    i++\n\n    monto = monto + this.nuevaFacturacion.productos[i].monto || 0;\n\n    this.subtotalMonto = monto\n    this.iva = (this.subtotalMonto * 16) / 100\n    this.TotalMonto = this.subtotalMonto + this.iva\n\n  }\n\n\n    \n  }\n\n  borrarProducto(i){\n\n    this.subtotalMonto = this.subtotalMonto - this.nuevaFacturacion.productos[i].monto;\n    \n    this.iva = (this.subtotalMonto * 16) / 100\n\n    this.TotalMonto = this.subtotalMonto + this.iva\n    \n\n    return this.nuevaFacturacion.productos.splice(i, 1)\n  }\n\n\n  toast(mensaje: string, accion: string) {\n    this.snackBar.open(mensaje, accion, {\n      duration: 3000,\n    });\n  }\n\n}\n","module.exports = \".example-icon {\\n    padding: 0 14px;\\n}\\n\\n.example-spacer {\\n    -webkit-box-flex: 1;\\n            flex: 1 1 auto;\\n}\\n\\n.example-header-image {\\n    /* background-image: url('../../../assets/img/60346624_1073310059523500_5022068167875231744_n.jpg'); */\\n    background-size: cover;\\n}\\n\\n.image {\\n    background-size: cover;\\n}\\n\\n.container-full {\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.example-sidenav-content {\\n    display: -webkit-box;\\n    display: flex;\\n    height: 100%;\\n    -webkit-box-align: center;\\n            align-items: center;\\n    -webkit-box-pack: center;\\n            justify-content: center;\\n}\\n\\n.example-sidenav {\\n    padding: 20px;\\n}\\n\\n.cursor {\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYWdlcy9wYWdlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLG1CQUFjO1lBQWQsY0FBYztBQUNsQjs7QUFFQTtJQUNJLHNHQUFzRztJQUN0RyxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLFlBQVk7SUFDWix5QkFBbUI7WUFBbkIsbUJBQW1CO0lBQ25CLHdCQUF1QjtZQUF2Qix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZXMvcGFnZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWljb24ge1xuICAgIHBhZGRpbmc6IDAgMTRweDtcbn1cblxuLmV4YW1wbGUtc3BhY2VyIHtcbiAgICBmbGV4OiAxIDEgYXV0bztcbn1cblxuLmV4YW1wbGUtaGVhZGVyLWltYWdlIHtcbiAgICAvKiBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uLy4uL2Fzc2V0cy9pbWcvNjAzNDY2MjRfMTA3MzMxMDA1OTUyMzUwMF81MDIyMDY4MTY3ODc1MjMxNzQ0X24uanBnJyk7ICovXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cblxuLmltYWdlIHtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG4uY29udGFpbmVyLWZ1bGwge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuLmV4YW1wbGUtc2lkZW5hdi1jb250ZW50IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uZXhhbXBsZS1zaWRlbmF2IHtcbiAgICBwYWRkaW5nOiAyMHB4O1xufVxuXG4uY3Vyc29yIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59Il19 */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\"> <strong>F</strong>actuarion &nbsp;\\n    <span> |\\n            <button mat-button (click)=\\\"dashboard()\\\">Dashboard </button>\\n        </span>\\n    <span> |\\n    <button mat-button matTooltip=\\\"Crear una nueva solicitud\\\"\\n    matTooltipPosition=\\\"below\\\" (click)=\\\"abrirModal()\\\">Nueva facturacion </button>\\n</span>\\n\\n    <span class=\\\"example-spacer\\\"></span>\\n\\n    <button mat-button (click)=\\\"drawer.toggle()\\\"> <mat-icon>home</mat-icon> </button>\\n</mat-toolbar>\\n\\n\\n<mat-drawer-container class=\\\"container-full\\\" autosize>\\n    <mat-drawer #drawer class=\\\"example-sidenav\\\" mode=\\\"over\\\">\\n\\n        <mat-list>\\n\\n            <h2>Facturacion</h2>\\n\\n            <div class=\\\"text-center\\\">\\n\\n\\n                <img class=\\\"rounded-circle\\\" src=\\\"../../../assets/img/prueba.jpg\\\" height=\\\"140\\\" width=\\\"140\\\">\\n\\n                <h6 class=\\\"mt-3\\\">{{ nombre }}</h6>\\n            </div>\\n            <mat-divider></mat-divider>\\n            <a mat-list-item class=\\\"cursor\\\" (click)=\\\"drawer.toggle()\\\" (click)=\\\"cliente()\\\">\\n                <mat-icon>person_add</mat-icon> &nbsp; Nuevo Cliente</a>\\n            <a mat-list-item class=\\\"cursor\\\" (click)=\\\"drawer.toggle()\\\" (click)=\\\"producto()\\\">\\n                <mat-icon>add_circle</mat-icon> &nbsp; Nuevo Producto</a>\\n            <mat-divider></mat-divider>\\n            <a mat-list-item class=\\\"cursor\\\" (click)=\\\"salir()\\\">\\n                <mat-icon>power_settings_new</mat-icon> &nbsp; Salir</a>\\n\\n\\n\\n        </mat-list>\\n\\n\\n    </mat-drawer>\\n\\n\\n\\n    <div class=\\\"container-fluid mt-5\\\">\\n\\n        <router-outlet></router-outlet>\\n    </div>\\n</mat-drawer-container>\"","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material';\nimport { NuevaFacturaComponent } from '../nueva-factura/nueva-factura.component';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FacturacionService } from '../../services/facturacion.service';\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.css']\n})\nexport class PagesComponent implements OnInit {\n\n  nombre = localStorage.getItem('nombre')\n\n  constructor(private bottomSheet: MatBottomSheet,\n              private router: Router,\n              private snackBar: MatSnackBar,\n              private facturacionService: FacturacionService) { }\n\n  ngOnInit() {\n  }\n\n  abrirModal(): void {\n    this.bottomSheet.open(NuevaFacturaComponent, {data: '123'});\n\n \n}\n\ndashboard(){\n\n  return this.router.navigate(['dashboard']);\n\n}\n\n\ntoast(mensaje: string, accion: string) {\n  this.snackBar.open(mensaje, accion, {\n    duration: 3000,\n  });\n}\n\n\nsalir(){\n  localStorage.clear()\n  return this.router.navigate(['/login'])\n}\n\ncliente(){\n  return this.router.navigate(['/clientes'])\n}\n\nproducto(){\n  return this.router.navigate(['/productos'])\n}\n\n}\n","module.exports = \"mat-form-field {\\n    display: block;\\n}\\n\\ntable {\\n    width: 100%;\\n}\\n\\n.alto {\\n    height: 420px;\\n    overflow: hidden;\\n}\\n\\n.scroll {\\n    overflow-y: scroll;\\n    height: 400px;\\n    /*background:gray;*/\\n    padding: 5px;\\n}\\n\\n.example-spacer {\\n    -webkit-box-flex: 1;\\n            flex: 1 1 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0b3MvcHJvZHVjdG9zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxtQkFBYztZQUFkLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Byb2R1Y3Rvcy9wcm9kdWN0b3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxudGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4uYWx0byB7XG4gICAgaGVpZ2h0OiA0MjBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uc2Nyb2xsIHtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICAgaGVpZ2h0OiA0MDBweDtcbiAgICAvKmJhY2tncm91bmQ6Z3JheTsqL1xuICAgIHBhZGRpbmc6IDVweDtcbn1cblxuLmV4YW1wbGUtc3BhY2VyIHtcbiAgICBmbGV4OiAxIDEgYXV0bztcbn0iXX0= */\"","module.exports = \"<div class=\\\"container-fluid mt-5\\\">\\n\\n\\n    <div class=\\\"row\\\">\\n\\n\\n        <div class=\\\"col-md-5\\\">\\n\\n            <mat-card>\\n\\n                <mat-card-title>\\n                    Nuevo Producto\\n                </mat-card-title>\\n\\n                <mat-card-content>\\n\\n                    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"RegistrarProducto(form)\\\">\\n                        <!-- <input type=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"formulario._id\\\"> -->\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-12 \\\">\\n                                <mat-form-field appearance=\\\"outline\\\">\\n                                    <mat-label>Nombre del producto</mat-label>\\n                                    <input type=\\\"text\\\" matInput placeholder=\\\"Nombre del producto\\\" name=\\\"producto\\\" [(ngModel)]=\\\"formulario.producto\\\" required>\\n\\n\\n                                </mat-form-field>\\n                            </div>\\n\\n                        </div>\\n\\n\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field appearance=\\\"outline\\\">\\n                                    <mat-label>Bs.S</mat-label>\\n                                    <input type=\\\"text\\\" matInput placeholder=\\\"bsS\\\" disabled name=\\\"bsS\\\">\\n\\n\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-9\\\">\\n                                <mat-form-field appearance=\\\"outline\\\">\\n                                    <mat-label>Monto (Numerico)</mat-label>\\n                                    <input type=\\\"number\\\" matInput placeholder=\\\"Ingresa el costo del producto\\\" name=\\\"monto\\\" [(ngModel)]=\\\"formulario.monto\\\">\\n\\n\\n                                </mat-form-field>\\n                            </div>\\n\\n                        </div>\\n\\n\\n                        <button class=\\\"btn-block\\\" [disabled]=\\\"form.valid === false\\\" mat-raised-button color=\\\"primary\\\">Agregar Cliente</button  >\\n\\n\\n                    </form>\\n\\n\\n\\n                </mat-card-content>\\n                <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"clickSubmit\\\"></mat-progress-bar>\\n\\n            </mat-card>\\n\\n        </div>\\n\\n\\n        <div class=\\\"col-md-7\\\">\\n\\n            <mat-card>\\n                <mat-card-title>\\n                    Productos registrado\\n\\n                    <span class=\\\"example-spacer \\\"></span>\\n                    <div class=\\\"float-right\\\">\\n\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Buscar Producto\\\" #buscar (keyup)=\\\"buscarProducto(buscar.value)\\\">\\n\\n\\n                    </div>\\n                </mat-card-title>\\n\\n                <mat-card-content class=\\\"alto\\\">\\n\\n                    <div class=\\\"scroll\\\">\\n                        <table class=\\\"table table \\\">\\n\\n\\n                            <thead>\\n                                <tr>\\n                                    <th class=\\\"text-center\\\">Codigo Producto</th>\\n\\n                                    <th class=\\\"text-center\\\">Nombre</th>\\n\\n                                    <th class=\\\"text-center\\\">Monto</th>\\n\\n                                    <th class=\\\"text-center\\\">Fecha de Creacion</th>\\n                                </tr>\\n\\n                            </thead>\\n\\n\\n                            <tbody>\\n                                <h3 *ngIf=\\\"!existeCliente\\\" class=\\\"text-center\\\"> No existe el Producto solicitado </h3>\\n                                <tr *ngFor=\\\"let producto of Productos\\\" >\\n                                    <td class=\\\"text-center\\\" > {{ producto.codigoProducto  }} </td>\\n\\n                                    <td class=\\\"text-center\\\"> {{ producto.producto}} </td>\\n\\n                                    <td class=\\\"text-center\\\"> {{ producto.monto}} Bs.S </td>\\n\\n                                    <td class=\\\"text-center\\\"> {{ producto.fechaCreacion | date: \\\"short\\\" }} </td>\\n\\n                                    <td>\\n                                        <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"EliminarProducto(producto._id)\\\" ><mat-icon>delete</mat-icon></button>\\n                        </td>\\n                        </tr>\\n\\n                        </tbody>\\n\\n\\n\\n                        </table>\\n        </div>\\n\\n        </mat-card-content>\\n        </mat-card>\\n    </div>\\n\\n\\n\\n\\n\\n\\n</div>\\n\\n\\n\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { ProductoService } from '../../services/producto.service';\nimport { MatSnackBar } from '@angular/material';\n\n\n@Component({\n  selector: 'app-productos',\n  templateUrl: './productos.component.html',\n  styleUrls: ['./productos.component.css']\n})\nexport class ProductosComponent implements OnInit {\n\n  clickSubmit = false;\n\n\n  formulario = {\n    producto: '',\n    monto: 0,\n    codigoProducto: 1000\n\n  }\n\n  Productos = [];\n\n  UltimoCodigoProducto: number;\n\n  existeCliente = true;\n\n  constructor(private productoService: ProductoService,\n              private snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n\n    this.llamarProductos();\n  }\n\n  RegistrarProducto(form: NgForm){\n\n\n\n    if(this.formulario.producto === ''){\n      return;\n    }\n\n    this.clickSubmit = true;\n\n    const producto = {\n      producto: this.formulario.producto,\n      monto: this.formulario.monto,\n      fechaCreacion: Date.now(),\n      codigoProducto: this.UltimoCodigoProducto + 1 || 1000\n    }\n\n    this.productoService.CrearProducto(producto).subscribe((resp) => {\n      this.toast('Producto Creado con exito', 'Cerrar')\n      this.clickSubmit = false;\n      form.reset();\n      this.llamarProductos();\n    })\n\n\n\n  }\n\n  llamarProductos(){\n    this.productoService.llamarProductos().subscribe((resp2: any) => {\n      this.Productos = resp2.listado;\n\n\n\n        this.UltimoCodigoProducto = resp2.listado[0].codigoProducto;\n      \n    })\n  }\n\n  EliminarProducto(id){\n\n    this.productoService.EliminarProducto(id).subscribe((resp) => {\n      this.toast('Producto eliminado', 'Cerrar')\n      this.llamarProductos()\n    })\n  }\n\n  buscarProducto(key){\n\n\n    if(key.length > 0){\n      return this.productoService.buscarProducto(key).subscribe((resp: any) => {\n         this.Productos = resp.listado;\n \n         this.existeCliente = true;\n \n         if(this.Productos.length === 0) {\n \n           this.existeCliente = false;\n         }\n       });\n       \n     }\n     this.existeCliente = true;\n     this.llamarProductos()\n  }\n\n\n  toast(mensaje: string, accion: string) {\n    this.snackBar.open(mensaje, accion, {\n      duration: 3000,\n    });\n  }\n\n}\n","module.exports = \"mat-form-field {\\n    display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy92ZXJjbGllbnRlL3ZlcmNsaWVudGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3ZlcmNsaWVudGUvdmVyY2xpZW50ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufSJdfQ== */\"","module.exports = \"<mat-card>\\n    <mat-card-title>\\n        Datos del Cliente\\n        <br>\\n    </mat-card-title>\\n\\n    <mat-card-content>\\n\\n        <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"RegistrarCliente(form)\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12 \\\">\\n                    <mat-form-field appearance=\\\"outline\\\">\\n                        <mat-label>Nombre Completo</mat-label>\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Nombre completo\\\" disabled name=\\\"nombre\\\" [(ngModel)]=\\\"cliente.nombre\\\" required>\\n\\n\\n                    </mat-form-field>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n\\n\\n\\n                <div class=\\\"col-md-6\\\">\\n                    <mat-form-field appearance=\\\"outline\\\">\\n                        <mat-label>Cedula (Opcional)</mat-label>\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Cedula\\\" disabled name=\\\"cedula\\\" [(ngModel)]=\\\"cliente.cedula\\\">\\n\\n\\n                    </mat-form-field>\\n                </div>\\n\\n                <div class=\\\"col-md-6\\\">\\n                    <mat-form-field appearance=\\\"outline\\\">\\n                        <mat-label>Edad</mat-label>\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Edad\\\" disabled name=\\\"edad\\\" [(ngModel)]=\\\"cliente.edad\\\" #edad (keyup)=\\\"edad1 = edad.value\\\" data-inputmask='\\\"mask\\\": \\\"99\\\"' data-mask>\\n\\n\\n                    </mat-form-field>\\n                </div>\\n\\n\\n\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12 \\\">\\n                    <mat-form-field appearance=\\\"outline\\\">\\n                        <mat-label>Direccion local</mat-label>\\n                        <textarea type=\\\"text\\\" disabled name=\\\"direccion\\\" [(ngModel)]=\\\"cliente.direccion\\\" required matInput placeholder=\\\"Direccion local\\\"></textarea>\\n\\n\\n                    </mat-form-field>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <mat-form-field appearance=\\\"outline\\\">\\n                        <mat-label>Celular</mat-label>\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Celular\\\" disabled name=\\\"celular\\\" [(ngModel)]=\\\"cliente.celular\\\" #celular (keyup)=\\\"celular1 = celular.value\\\" data-inputmask='\\\"mask\\\": \\\"(9999)-999-9999\\\"' data-mask>\\n\\n\\n                    </mat-form-field>\\n                </div>\\n\\n                <div class=\\\"col-md-6\\\">\\n                    <mat-form-field appearance=\\\"outline\\\">\\n                        <mat-label>Telefono </mat-label>\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Telefono (Opcional)\\\" disabled name=\\\"telefono\\\" [(ngModel)]=\\\"cliente.telefono\\\" #telefono (keyup)=\\\"telefono1 = telefono.value\\\" data-inputmask='\\\"mask\\\": \\\"(9999)-999-9999\\\"' data-mask>\\n\\n\\n                    </mat-form-field>\\n                </div>\\n\\n            </div>\\n\\n\\n\\n\\n        </form>\\n\\n\\n\\n    </mat-card-content>\\n</mat-card>\"","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\nimport { ClientesComponent } from '../clientes/clientes.component';\nimport { ClienteService } from 'src/app/services/cliente.service';\n\n@Component({\n  selector: 'app-vercliente',\n  templateUrl: './vercliente.component.html',\n  styleUrls: ['./vercliente.component.css']\n})\nexport class VerclienteComponent implements OnInit {\n\n  cliente: any = {};\n\n  constructor(private bottomSheetRef: MatBottomSheetRef<ClientesComponent>,\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n              private clienteService: ClienteService) {\n\n      this.ObtenerCliente(data)\n     }\n\n  ngOnInit() {\n  }\n\n\n\n  ObtenerCliente(id){\n    this.clienteService.verCliente(id).subscribe((resp: any) => {\n\n      this.cliente = resp.solicitud;\n      \n    });\n  }\n\n}\n","module.exports = \".alto {\\n    height: 420px;\\n    overflow: hidden;\\n}\\n\\n.scroll {\\n    overflow-y: scroll;\\n    height: 400px;\\n    /*background:gray;*/\\n    padding: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy92ZXJmYWN0dXJhL3ZlcmZhY3R1cmEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy92ZXJmYWN0dXJhL3ZlcmZhY3R1cmEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbHRvIHtcbiAgICBoZWlnaHQ6IDQyMHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5zY3JvbGwge1xuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgICBoZWlnaHQ6IDQwMHB4O1xuICAgIC8qYmFja2dyb3VuZDpncmF5OyovXG4gICAgcGFkZGluZzogNXB4O1xufSJdfQ== */\"","module.exports = \"<h3>\\n    Resumen Factura</h3>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>Cliente</mat-label>\\n            <input matInput disabled type=\\\"text\\\" [value]=\\\"factura.cliente\\\" required>\\n        </mat-form-field>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>Cedula</mat-label>\\n            <input matInput disabled type=\\\"text\\\" [value]=\\\"factura.cedula\\\" required>\\n        </mat-form-field>\\n    </div>\\n</div>\\n<hr>\\n\\n<mat-card>\\n    <mat-card-title>\\n        Productos comprado\\n    </mat-card-title>\\n\\n    <mat-card-content class=\\\"alto\\\">\\n\\n        <div class=\\\"scroll\\\">\\n            <table class=\\\"table table \\\">\\n\\n\\n                <thead>\\n                    <tr>\\n                        <th class=\\\"text-center\\\">Codigo Producto</th>\\n\\n                        <th class=\\\"text-center\\\">Nombre</th>\\n\\n                        <th class=\\\"text-center\\\">Monto</th>\\n\\n\\n                    </tr>\\n\\n                </thead>\\n\\n\\n                <tbody>\\n                    <tr *ngFor=\\\"let producto of factura.productos\\\">\\n                        <td class=\\\"text-center\\\"> {{ producto.codigoProducto }} </td>\\n\\n                        <td class=\\\"text-center\\\"> {{ producto.producto }} </td>\\n\\n                        <td class=\\\"text-center\\\"> {{ producto.monto }} Bs.S </td>\\n\\n                    </tr>\\n\\n                </tbody>\\n\\n                <tfoot>\\n                    <tr>\\n                        <td></td>\\n                        <td></td>\\n                        <td class=\\\"text-center\\\">\\n                            <strong>Total Productos: {{ factura.productos.length }} </strong>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td></td>\\n                        <td></td>\\n                        <td class=\\\"text-center\\\">\\n                            <strong>Subtotal:</strong> {{ factura.subtotal }} Bs.S\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td></td>\\n                        <td></td>\\n                        <td class=\\\"text-center\\\">\\n                            <strong>IVA 16%:</strong> {{ factura.iva }} Bs.S\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td></td>\\n                        <td></td>\\n                        <td class=\\\"text-center\\\">\\n                            <strong>Total:</strong> {{ factura.totalmonto }} Bs.S\\n                        </td>\\n                    </tr>\\n                </tfoot>\\n\\n\\n\\n            </table>\\n\\n        </div>\\n    </mat-card-content>\\n</mat-card>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FacturacionService } from '../../services/facturacion.service';\n\n@Component({\n  selector: 'app-verfactura',\n  templateUrl: './verfactura.component.html',\n  styleUrls: ['./verfactura.component.css']\n})\nexport class VerfacturaComponent implements OnInit {\n\n  factura: any = {};\n\n  constructor(public dialogRef: MatDialogRef<DashboardComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n              private facturacionService: FacturacionService) { }\n\n  ngOnInit() {\n\n    this.ObtenerFactura(this.data)\n  }\n\n\n  CerrarDialogo(): void {\n    this.dialogRef.close();\n  }\n\n\n  ObtenerFactura(id){\n    this.facturacionService.ObtenerunaFactura(id).subscribe((resp: any) => {\n\n      this.factura = resp.solicitud;\n    })\n  }\n\n}\n","export const URI = ''\n\n\n// const URI = 'http://localhost:3000'","import { Injectable } from '@angular/core';\nimport {  CanActivate, Router } from '@angular/router';\nimport { LoginService } from '../services/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogeadoGuard implements CanActivate  {\n\n  constructor(private login: LoginService,\n    private router: Router) {}\n\n  canActivate() {\n    if ( this.login.estaLogueado()) {\n      return true;\n    }\n\n\n\n    this.router.navigate(['login']);\n    return false;\n\n}\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvdG9vbGJhci90b29sYmFyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\"> <strong>F</strong>acturacion </mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"mat-form-field {\\n    display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufSJdfQ== */\"","module.exports = \"<app-toolbar></app-toolbar>\\n\\n\\n<div class=\\\"container mt-5 \\\">\\n    <h2 class=\\\"text-center\\\">Modulo de facturacion</h2>\\n\\n    <mat-card>\\n\\n        <br>\\n        <mat-card-title>\\n            <mat-icon>https</mat-icon>Login</mat-card-title>\\n\\n        <mat-card-content>\\n\\n            <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"logear(form)\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12 \\\">\\n                        <mat-form-field appearance=\\\"outline\\\">\\n                            <mat-label>Email</mat-label>\\n                            <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" name=\\\"email\\\" required [(ngModel)]=\\\"form.value.email\\\">\\n\\n\\n                        </mat-form-field>\\n                    </div>\\n\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n\\n\\n\\n                    <div class=\\\"col-md-12\\\">\\n                        <mat-form-field appearance=\\\"outline\\\">\\n                            <mat-label>Password</mat-label>\\n                            <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" name=\\\"clave\\\" required minlength=\\\"8\\\" [(ngModel)]=\\\"form.value.clave\\\">\\n\\n\\n                        </mat-form-field>\\n                    </div>\\n\\n\\n\\n                </div>\\n\\n\\n\\n\\n\\n\\n\\n                <button class=\\\"btn-block\\\" [disabled]=\\\"form.valid === false\\\" mat-raised-button color=\\\"primary\\\">Iniciar Session</button>\\n\\n            </form>\\n\\n        </mat-card-content>\\n\\n        <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"clickSubmit\\\"></mat-progress-bar>\\n\\n    </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { LoginService } from '../services/login.service';\nimport { NgForm } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  clickSubmit = false;\n\n  constructor(private loginService: LoginService,\n              private snackBar: MatSnackBar,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  logear(form: NgForm) {\n\n    this.clickSubmit = true;\n    \n    const admin = {\n      email: form.value.email,\n      password: form.value.clave\n    }\n\n    this.loginService.Login(admin).subscribe((resp: any) => {\n      \n      if (resp.message === 'Email Incorrecto') {\n        this.clickSubmit = false;\n        return this.toast('Email invalido', 'Cerrar')\n      }\n      if (resp.message === 'Contraseña invalida') {\n        this.clickSubmit = false;\n        return this.toast('Contraseña invalida', 'Cerrar')\n      }\n      if (resp.message === 'Logeado') {\n\n        this.clickSubmit = false;\n        localStorage.setItem('nombre',resp.user.nombre )\n        localStorage.setItem('JWT', resp.JWT)\n        this.toast(`Bienvenido ${resp.user.nombre}`, 'Cerrar')\n        return this.router.navigate(['/dashboard']);\n      }\n    })\n  }\n\n\n  toast(mensaje: string, accion: string) {\n    this.snackBar.open(mensaje, accion, {\n      duration: 3000,\n    });\n  }\n\n}\n","module.exports = \"mat-form-field {\\n    display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0cm8vcmVnaXN0cm8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3Ryby9yZWdpc3Ryby5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufSJdfQ== */\"","module.exports = \"<app-toolbar></app-toolbar>\\n\\n\\n<div class=\\\"container mt-5 \\\">\\n    <h2 class=\\\"text-center\\\">Modulo de Facturacion</h2>\\n\\n    <mat-card>\\n        <mat-card-title>Registro</mat-card-title>\\n\\n        <mat-card-content>\\n\\n            <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"Registro(form)\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12 \\\">\\n                        <mat-form-field>\\n\\n                            <input type=\\\"text\\\" matInput placeholder=\\\"Nombre Completo\\\" name=\\\"nombre\\\" [(ngModel)]=\\\"form.value.nombre\\\" required>\\n\\n\\n                        </mat-form-field>\\n                    </div>\\n\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n\\n\\n                    <div class=\\\"col-md-2\\\">\\n                        <mat-form-field>\\n                            <mat-label>Inicial de tu cedula</mat-label>\\n                            <mat-select name=\\\"initCedula\\\" [(ngModel)]=\\\"form.value.initCedula\\\">\\n                                <mat-option value=\\\"V-\\\">\\n                                    V\\n                                </mat-option>\\n                                <mat-option value=\\\"E-\\\">\\n                                    E\\n                                </mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n\\n                    <div class=\\\"col-md-4\\\">\\n                        <mat-form-field>\\n\\n                            <input type=\\\"text\\\" matInput placeholder=\\\"Cedula\\\" name=\\\"cedula\\\" [(ngModel)]=\\\"form.value.cedula\\\" #cedula (keyup)=\\\"cedula1 = cedula.value\\\" data-inputmask='\\\"mask\\\": \\\"99.999.999\\\"' data-mask>\\n\\n\\n                        </mat-form-field>\\n                    </div>\\n\\n\\n\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n\\n                            <input type=\\\"text\\\" matInput placeholder=\\\"Edad\\\" name=\\\"edad\\\" [(ngModel)]=\\\"form.value.edad\\\" #edad (keyup)=\\\"edad1 = edad.value\\\" data-inputmask='\\\"mask\\\": \\\"99\\\"' data-mask>\\n\\n\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n\\n                            <input type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.value.email\\\" required matInput placeholder=\\\"Email\\\">\\n\\n\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n\\n                            <input type=\\\"email\\\" name=\\\"email2\\\" [(ngModel)]=\\\"form.value.email2\\\" required matInput placeholder=\\\"Confirmar Email\\\">\\n\\n\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <mat-form-field>\\n\\n                            <input type=\\\"text\\\" name=\\\"direccion\\\" [(ngModel)]=\\\"form.value.direccion\\\" required matInput placeholder=\\\"Direccion local\\\">\\n\\n\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n\\n                            <input type=\\\"text\\\" matInput placeholder=\\\"Celular\\\" name=\\\"celular\\\" [(ngModel)]=\\\"form.value.celular\\\" #celular (keyup)=\\\"celular1 = celular.value\\\" data-inputmask='\\\"mask\\\": \\\"(9999)-999-9999\\\"' data-mask>\\n\\n\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n\\n                            <input type=\\\"text\\\" matInput placeholder=\\\"Telefono (Opcional)\\\" name=\\\"telefono\\\" [(ngModel)]=\\\"form.value.telefono\\\" #telefono (keyup)=\\\"telefono1 = telefono.value\\\" data-inputmask='\\\"mask\\\": \\\"(9999)-999-9999\\\"' data-mask>\\n\\n\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n\\n\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n\\n                            <input type=\\\"password\\\" name=\\\"clave\\\" minlength=\\\"8\\\" [(ngModel)]=\\\"form.value.clave\\\" required matInput placeholder=\\\"Contraseña (minimo 8 caracter)\\\">\\n\\n\\n                        </mat-form-field>\\n\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <mat-form-field>\\n\\n                            <input type=\\\"password\\\" name=\\\"clave2\\\" minlength=\\\"8\\\" [(ngModel)]=\\\"form.value.clave2\\\" required required matInput placeholder=\\\"Confirmar contraseña\\\">\\n\\n\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n\\n\\n\\n\\n\\n\\n                <button class=\\\"btn-block\\\" [disabled]=\\\"form.valid === false\\\" mat-raised-button color=\\\"primary\\\">Registrar</button>\\n\\n            </form>\\n\\n        </mat-card-content>\\n\\n        <mat-card-actions>\\n\\n            <p class=\\\"text-center\\\">Ya tienes cuenta? <a [routerLink]=\\\"['/login']\\\">Click aqui</a></p>\\n        </mat-card-actions>\\n\\n\\n        <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n    </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { RegistroService } from '../services/registro.service';\n\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Usuario } from '../config/usuario';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css']\n})\nexport class RegistroComponent implements OnInit {\n\n  cedula1: string;\n  edad1: string;\n  celular1: string;\n  telefono1: string;\n\n\n\n  constructor(private registroService: RegistroService,\n              private snackBar: MatSnackBar,\n              private router: Router ) {\n   }\n\n  ngOnInit() {\n  }\n\n\n  Registro(form: NgForm) {\n\n    if (form.value.clave != form.value.clave2) {\n     return this.toast('Las contraseña deben ser iguales', 'Cerrar')\n    }\n\n    if (form.value.email != form.value.email2) {\n     return this.toast('Los email deben ser iguales', 'Cerrar')\n    }\n\n    const cliente: Usuario = {\n      cedula: form.value.initCedula + this.cedula1,\n      celular: this.celular1,\n      direccion: form.value.direccion,\n      edad: this.edad1,\n      email: form.value.email,\n      nombre: form.value.nombre,\n      password: form.value.clave,\n      telefono: this.telefono1\n\n    }\n\n    this.registroService.AgregarCliente(cliente).subscribe((resp) => {\n      this.toast('Usuario Creado con exito', 'Cerrar');\n      return this.router.navigate(['login']);\n    })\n\n  }\n\n\n  toast(mensaje: string, accion: string) {\n    this.snackBar.open(mensaje, accion, {\n      duration: 4000,\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { URI } from '../config/url';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  token = localStorage.getItem('JWT');\n\n  constructor(private http: HttpClient) { }\n\n\n  CrearCliente(cliente){\n    const uri = `${URI}/cliente?token=${this.token}`;\n\n    return this.http.post(uri, cliente);\n  }\n\n  llamarClientes(){\n    const uri = `${URI}/cliente?token=${this.token}`;\n\n    return this.http.get(uri);\n\n  }\n\n  verCliente(id){\n    const uri = `${URI}/cliente/${id}?token=${this.token}`;\n    return this.http.get(uri);\n  }\n\n  actualizarCliente(id, body){\n    const uri = `${URI}/cliente/${id}?token=${this.token}`;\n    return this.http.put(uri, body);\n  }\n\n  buscarCliente(busqueda){\n    const uri = `${URI}/cliente/busqueda/${busqueda}?token=${this.token}`;\n    return this.http.get(uri);\n  }\n\n  EliminarCliente(id){\n    const uri = `${URI}/cliente/${id}?token=${this.token}`;\n    return this.http.delete(uri);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { URI } from '../config/url';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FacturacionService {\n\n  token = localStorage.getItem('JWT')\n\n  NuevaFactura = false;\n\n  constructor(private http: HttpClient) { }\n\n\n  ObtenerClientePorCedula(cedula){\n\n    const uri = `${URI}/cliente/cedula/${cedula}?token=${this.token}`\n\n    return this.http.get(uri);\n  }\n\n  llamarProductos(){\n    const uri = `${URI}/producto?token=${this.token}`;\n\n    return this.http.get(uri);\n\n  }\n\n  BuscarCodigoProducto(codigo){\n    const uri = `${URI}/producto/codigo/${codigo}?token=${this.token}`;\n\n    return this.http.get(uri);\n\n  }\n\n \n  crearFactura(factura){\n    const uri = `${URI}/factura?token=${this.token}`;\n\n    return this.http.post(uri, factura);\n  }\n\n  ObtenerunaFactura(id){\n    const uri = `${URI}/factura/${id}?token=${this.token}`;\n\n    return this.http.get(uri);\n  }\n\n\n  llamarFacturas(){\n    const uri = `${URI}/factura?token=${this.token}`;\n\n    return this.http.get(uri);\n  }\n\n  EliminarFactura(id){\n    const uri = `${URI}/factura/${id}?token=${this.token}`;\n\n    return this.http.delete(uri);\n  }\n\n\n  buscarFacturaporCliente(busqueda){\n    const uri = `${URI}/factura/busqueda/${busqueda}?token=${this.token}`;\n    return this.http.get(uri);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { URI } from '../config/url';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient) { }\n\n\n  Login(admin){\n    const uri = `${URI}/login`;\n\n    return this.http.post(uri, admin)\n  }\n\n\n  estaLogueado() {\n    return ( localStorage.getItem('JWT') ) ? true : false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { URI } from '../config/url';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductoService {\n\n  token = localStorage.getItem('JWT');\n\n  constructor(private http: HttpClient) { }\n\n\n  CrearProducto(producto){\n    const uri = `${URI}/producto?token=${this.token}`;\n\n    return this.http.post(uri, producto);\n  }\n\n  llamarProductos(){\n    const uri = `${URI}/producto?token=${this.token}`;\n\n    return this.http.get(uri);\n\n  }\n\n\n  buscarProducto(busqueda){\n    const uri = `${URI}/producto/busqueda/${busqueda}?token=${this.token}`;\n    return this.http.get(uri);\n  }\n\n  EliminarProducto(id){\n    const uri = `${URI}/producto/${id}?token=${this.token}`;\n    return this.http.delete(uri);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { URI } from '../config/url';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistroService {\n\n  constructor(private http: HttpClient) { }\n\n\n\n  AgregarCliente(Cliente){\n    const uri = `${URI}/usuario`;\n\n    return this.http.post(uri, Cliente);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}